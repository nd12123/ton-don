services:
  app:
    # —É–±–µ—Ä–∏ read_only: true –µ—Å–ª–∏ —Å—Ç–æ–∏—Ç
    environment:
      - NEXT_CACHE_DIR=/tmp/next-cache

    # –ú–æ–∂–Ω–æ —Å–æ–±–∏—Ä–∞—Ç—å –æ–±—Ä–∞–∑ –ø—Ä—è–º–æ —á–µ—Ä–µ–∑ compose
    build:
      context: .
      dockerfile: Dockerfile
    image: ton-stake:prod
    restart: unless-stopped
    env_file: .env
    expose:
      - "3000"
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:3000/ || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 5

    # üîí sandbox (–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞)
    read_only: true
    tmpfs:
      - /tmp:rw,noexec,nosuid,size=64m
    cap_drop:
      - ALL
    security_opt:
      - no-new-privileges:true
    ulimits:
      nofile:
        soft: 4096
        hard: 8192
    deploy:
      resources:
        limits:
          cpus: "1.0"
          memory: 512M

    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  caddy:
    image: caddy:2
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile:ro
      - ./caddy_static:/srv/static:ro
      - caddy_data:/data
      - caddy_config:/config
    depends_on:
      app:
        condition: service_healthy
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

volumes:
  caddy_data:
  caddy_config:
